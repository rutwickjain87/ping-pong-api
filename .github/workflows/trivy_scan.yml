name: Trivy Vulnerability Scanner

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  trivy-scan:
    name: Trivy vulnerability scanner
    runs-on: ubuntu-latest
    outputs:
      docker_image_list: ${{ steps.docker_image_list.outputs.DOCKER_IMAGE_LIST }}
    
    steps:
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate Docker Image list for build=true services
      id: docker_image_list
      run: |
        # list=$((jq -r '.services[] | select(.build == false) |  {image: (.registry + "/" + .name  + ":" + .version)} ' < deployment.json))
        list=$(jq -r '.services[] | select(.build == false) |  {image: (.registry + "/" + .name  + ":" + .version)} | flatten | join("")' < deployment.json)
        echo "DOCKER_IMAGE_LIST=$list" >> GITHUB_OUTPUT

    - name: Show Docker Image list
      run: |
        echo "Output: ${{ needs.trivy-scan.outputs.docker_image_list.DOCKER_IMAGE_LIST }}"

    # - name: Extract version from deploymen
    #     uses: sergeysova/jq-action@v2
    #     id: generate
    #     with:
    #       cmd: jq -r '.services[] | select(.build == false) |  {image: (.registry + "/" + .name  + ":" + .version)} ' < ./deployment.json
      
    # - name: Show my version
    #     run: 'echo "version ${{ steps.version.outputs.value }}"'

    # - name: generate docker image list
      
      
    - name: Build Docker image
      run: docker build -t ping-pong-api:${{ github.sha }} .
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ping-pong-api:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
